/* Median is the middle value in an ordered integer list. If the size of the list is even,
 * there is no middle value. So the median is the mean of the two middle value.
 *
 * For example,
 * [2,3,4], the median is 3
 *
 * [2,3], the median is (2 + 3) / 2 = 2.5
 *
 * Design a data structure that supports the following two operations:
 * 
 * void addNum(int num) - Add a integer number from the data stream to the data structure.
 * double findMedian() - Return the median of all elements so far.
 *
 */

class MedianFinder {
    //initilize arraylist
ArrayList<Integer> lst;
    
    /** initialize your data structure here. */
    public MedianFinder() {
         lst = new ArrayList <Integer>();
    }
    
    public void addNum(int num) {
        lst.add(num);
    }
    
    public double findMedian() {
        Collections.sort(lst);
        if(lst.size() % 2 == 0)
            return (double) (lst.get(lst.size()/2)+lst.get(lst.size()/2-1))/2;
        return lst.get(lst.size()/2);
    }
}

/**
 * Your MedianFinder object will be instantiated and called as such:
 * MedianFinder obj = new MedianFinder();
 * obj.addNum(num);
 * double param_2 = obj.findMedian();
 */
